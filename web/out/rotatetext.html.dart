// Auto-generated from rotatetext.html.
// DO NOT EDIT.

library x_rotate_text;

import 'dart:html' as autogenerated;
import 'package:web_components/web_components.dart' as autogenerated;

import 'dart:html';

import 'package:web_components/web_components.dart';

class RotateText extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  autogenerated.SpanElement __e1;
  
  var _binding0;
  
  List<autogenerated.WatcherDisposer> _stoppers1;
  
  autogenerated.SpanElement __e3;
  
  autogenerated.EventListener _listener__e3_click_2;
  
  var _binding2;
  
  RotateText.forElement(e) : super.forElement(e);
  
  void created_autogenerated() {
    _root = createShadowRoot();
    
    if (_root is autogenerated.ShadowRoot) _root.applyAuthorStyles = true;
    
    _root.innerHTML = '''
    
    <span id="__e-1"></span>
    <span class="view" data-action="click:reverseText" id="__e-3"></span>
    ''';
    __e1 = _root.query('#__e-1');
    _binding0 = autogenerated.nodeForBinding(greeting);
    _stoppers1 = [];
    __e1.nodes.add(_binding0);
    __e3 = _root.query('#__e-3');
    _binding2 = autogenerated.nodeForBinding(currentText);
    __e3.nodes.add(new autogenerated.Text('\n      '));
    __e3.nodes.add(_binding2);
    __e3.nodes.add(new autogenerated.Text('\n      '));
    
  }
  
  void inserted_autogenerated() {
    _stoppers1.add(autogenerated.watchAndInvoke(() => greeting, (__e) { _binding0 = autogenerated.updateBinding(__e.newValue, _binding0); }));
    
    _listener__e3_click_2 = (__e) {
      reverseText(__e);
      autogenerated.dispatch();
    };
    __e3.on.click.add(_listener__e3_click_2);
    
    _stoppers1.add(autogenerated.watchAndInvoke(() => currentText, (__e) { _binding2 = autogenerated.updateBinding(__e.newValue, _binding2); }));
    
  }
  
  void removed_autogenerated() {
    _root = null;
    
    __e1 = null;
    
    (_stoppers1..forEach((s) => s())).clear();
    
    _binding0 = null;
    
    __e3.on.click.remove(_listener__e3_click_2);
    _listener__e3_click_2 = null;
    
    __e3 = null;
    
    _binding2 = null;
    
  }
  
  /** Original code from the component. */
  
  var currentText = 'Click me!';
  String greeting = 'Hello ';
  
  void reverseText(Event event) {
    var text = currentText;
    var buffer = new StringBuffer();
    for (int i = currentText.length - 1; i >= 0; i--) {
      buffer.add(currentText[i]);
    }
    currentText = buffer.toString();
  }
}

