// Auto-generated from rotatetext.html.
// DO NOT EDIT.

library x_rotate_text;

import 'dart:html' as autogenerated;
import 'package:web_components/watcher.dart' as autogenerated;

import 'dart:html';

import 'package:web_components/web_components.dart';

class RotateText extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  autogenerated.SpanElement __e0;
  
  autogenerated.WatcherDisposer _stopWatcher__e0_1;
  
  autogenerated.SpanElement __e1;
  
  autogenerated.EventListener _listener__e1_click_2;
  
  autogenerated.WatcherDisposer _stopWatcher__e1_3;
  
  RotateText.forElement(e) : super.forElement(e) {
    _root = createShadowRoot();
  }
  
  void created_autogenerated() {
    if (_root is autogenerated.ShadowRoot) _root.applyAuthorStyles = true;
    
    _root.innerHTML = '''
    
    <span id="__e-0"></span>
    <span class="view" id="__e-1"></span>
    ''';
    __e0 = _root.query('#__e-0');
    
    __e1 = _root.query('#__e-1');
    
  }
  
  void inserted_autogenerated() {
    _stopWatcher__e0_1 = autogenerated.watchAndInvoke(() => greeting, (e) {
      __e0.innerHTML = '${greeting}';
    });
    
    _listener__e1_click_2 = (e) {
      reverseText(e);
      autogenerated.dispatch();
    };
    __e1.on.click.add(_listener__e1_click_2);
    
    _stopWatcher__e1_3 = autogenerated.watchAndInvoke(() => currentText, (e) {
      __e1.innerHTML = '\n      ${currentText}\n      ';
    });
    
  }
  
  void removed_autogenerated() {
    _stopWatcher__e0_1();
    
    __e0 = null;
    
    _stopWatcher__e1_3();
    
    __e1.on.click.remove(_listener__e1_click_2);
    _listener__e1_click_2 = null;
    
    __e1 = null;
    
  }
  
  /** Original code from the component. */
  
  var currentText = 'Click me!';
  String greeting = 'Hello ';
  
  void reverseText(Event event) {
    var text = currentText;
    var buffer = new StringBuffer();
    for (int i = currentText.length - 1; i >= 0; i--) {
      buffer.add(currentText[i]);
    }
    currentText = buffer.toString();
  }
}

